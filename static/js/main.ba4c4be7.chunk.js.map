{"version":3,"sources":["Components/Project.js","Components/Summary.js","App.js","serviceWorker.js","index.js"],"names":["Project","align","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","eventKey","Summary","Carousel","src","alt","width","height","App","state","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kSA0CeA,MAlCf,WACI,OACA,6BACI,wBAAIC,MAAO,UAAX,QACA,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACvD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,SAAnB,mBACA,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBACpB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACf,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,aAAf,YACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,YAAf,WACA,kBAACQ,EAAA,EAAD,CAAaC,MAAM,WAAWL,GAAG,2BACjC,kBAACI,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,UACA,kBAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,kBACA,kBAACQ,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,aACA,kBAACQ,EAAA,EAAYG,QAAb,MACA,kBAACH,EAAA,EAAYE,KAAb,CAAkBV,KAAK,eAAvB,oBAGA,kBAACK,EAAA,EAAD,KACA,kBAACA,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,cACA,kBAACK,EAAA,EAAIE,KAAL,CAAUK,SAAU,EAAGZ,KAAK,UAA5B,mB,QCWOa,MArCf,WAEI,OACI,6BACA,kBAACC,EAAA,EAAD,KACN,kBAACA,EAAA,EAASJ,KAAV,KACE,yBACEJ,UAAU,gBACVS,IAAI,8GACJC,IAAI,cACJC,MAAM,MAAMC,OAAO,SAGvB,kBAACJ,EAAA,EAASJ,KAAV,KACE,yBACEJ,UAAU,gBACVS,IAAI,mHACJC,IAAI,cACJC,MAAM,MAAMC,OAAO,SAKvB,kBAACJ,EAAA,EAASJ,KAAV,KACE,yBACEJ,UAAU,gBACVS,IAAI,mEACJC,IAAI,cACJC,MAAM,MAAMC,OAAO,YCNVC,E,YApBX,aAAe,IAAD,8BACV,+CACKC,MAAQ,GAFH,E,sEAOX,OACC,6BACI,kBAAC,EAAD,MACA,6BACI,kBAAC,EAAD,Y,GAZEC,IAAMC,WCQJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ba4c4be7.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Navbar} from \"react-bootstrap\";\r\nimport {Nav} from \"react-bootstrap\";\r\nimport {NavDropdown} from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\nfunction Project(){\r\n    return(\r\n    <div>\r\n        <h1 align= \"center\">JACK</h1>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#features\">Features</Nav.Link>\r\n        <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\r\n        <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n        <NavDropdown.Divider />\r\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n        </NavDropdown>\r\n        </Nav>\r\n        <Nav>\r\n        <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n        <Nav.Link eventKey={2} href=\"#memes\">\r\n        Dank memes\r\n        </Nav.Link>\r\n        </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n        \r\n    </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Project","import React from \"react\";\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nfunction Summary (){\r\n\r\n    return(\r\n        <div>\r\n        <Carousel>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"https://www.mememaker.net/api/bucket?path=static/img/memes/full/2017/Apr/22/0/sort-yourself-out-fat-boy.jpg\"\r\n      alt=\"First slide\"\r\n      width=\"150\" height=\"600\"\r\n    />\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"https://nyoobserver.files.wordpress.com/2017/02/screen-shot-2017-02-14-at-12-27-20-pm.png?w=653&quality=80&strip\"\r\n      alt=\"Third slide\"\r\n      width=\"150\" height=\"600\"\r\n    />\r\n\r\n\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"https://i.kym-cdn.com/photos/images/newsfeed/001/213/283/fbe.jpg\"\r\n      alt=\"Third slide\"\r\n      width=\"150\" height=\"600\"\r\n    />\r\n\r\n  </Carousel.Item>\r\n</Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summary","\nimport React from \"react\"\nimport Project from \"./Components/Project.js\"\nimport Summary from \"./Components/Summary.js\"\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n        }\n    }\n\n    render() {\n       return(\n        <div>\n            <Project/>\n            <div>\n                <Summary/>\n                </div>\n            \n        </div>\n       );\n\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}